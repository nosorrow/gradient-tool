{"version":3,"sources":["hex-to-rgba-extends.js","ColorPicker.js","randomcolor.js","App.js","index.js"],"names":["hexToRgbaExtends","hex","cHex","slice","r","parseInt","g","b","a","ColorPicker","props","onHandleShowColorPicker","setState","displayColorPicker","onHandleCloseColorPicker","onChangeColorPicker","color","rgb","changeColor","onColorChange","palleteKey","generatePickerByType","type","state","onChange","defaultColor","$","tooltip","className","style","backgroundColor","this","data-toggle","data-placement","title","readOnly","colorTextBoxStyle","defaultColorTextBoxStyle","name","value","onClick","pickerType","React","Component","defaultProps","defaultTitle","defaultLabelStyle","paddingBottom","fontSize","height","width","border","paddingLeft","randcolor","i","Math","floor","random","library","add","fab","faCheckSquare","faCoffee","faPlus","faTimes","Gradient","handleAddColorPallete","palettes","length","maxColor","randcol","gradientColors","push","rgbaString","hexToRgba","colors","arr","Array","from","keys","onColorPickerChange","handleDeleteColorPallete","splice","handleChangePallete","paltype","palettesType","rgba","defclr","defcolstr","undefined","gradientTitle","id","icon","map","el","key","RenderIcon","code","gradient","borderRadius","bgrRgba","txtBgr","angle","gradientAngle","radialType","rgbaColors","gradientType","backgroundImage","join","background","userGradient","WebkitBackgroundClip","backgroundClip","rgbaIconColors","iconColor","RenderCode","setCss","bgr","textBgr","bradius","css","html","setTimeout","Prism","highlightAll","trim","IconBorderRadius","handleRadius","e","onChangeRadius","target","min","max","defaultValue","GradientSettings","handleDirection","onChangeDirection","handleGradientType","onChangeGradientType","handleRadialType","onChangeRadialType","App","setGradientColors","rgbaGradientState","setGradientIconColors","rgbaGradientIconState","setBorderRadius","radius","setGradientDirection","setGradientType","t","setRadialType","bgrColorState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3aace57f.chunk.js","sourcesContent":["\r\nconst trimSymbol = (symbol) => {\r\n    return symbol.slice(1);\r\n}\r\n\r\nconst hexToRgbaExtends = (hex) => {\r\n    let cHex = trimSymbol(hex);\r\n    let a = 1;\r\n    let r = parseInt(cHex.slice(0, 2), 16);\r\n    let g = parseInt(cHex.slice(2, 4), 16);\r\n    let b = parseInt(cHex.slice(4, 6), 16);\r\n    return { r: r, g: g, b: b, a: a }\r\n}\r\n\r\nexport default hexToRgbaExtends;","// https://codesandbox.io/s/wkx3r7y6q7?from-embed\r\n// https://www.npmjs.com/package/react-color-picker-text\r\n// https://medium.com/@tariqul.islam.rony/color-picker-by-react-js-and-react-color-775aab6bd7e9\r\nimport React from \"react\";\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport {\r\n  ChromePicker,\r\n  SketchPicker,\r\n  PhotoshopPicker,\r\n  GithubPicker,\r\n  TwitterPicker,\r\n  SwatchesPicker,\r\n  CompactPicker\r\n} from \"react-color\";\r\n\r\nexport class ColorPicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayColorPicker: false,\r\n      changeColor: this.props.defaultColor || \"#9999999\",\r\n      color: this.props.color\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // Jquery here $(...)...\r\n    $(function () {\r\n      $('[data-toggle=\"tooltip\"]').tooltip()\r\n    });\r\n\r\n  }\r\n  onHandleShowColorPicker = () => {\r\n    this.setState({ displayColorPicker: true });\r\n  };\r\n  onHandleCloseColorPicker = () => {\r\n    this.setState({ displayColorPicker: false });\r\n  };\r\n\r\n  onChangeColorPicker = (color) => {\r\n    this.setState({ color: color.rgb, changeColor: color.hex });\r\n    this.props.onColorChange(color, this.props.palleteKey);\r\n  };\r\n\r\n  generatePickerByType = type => {\r\n    if (type === \"Chrome\") {\r\n      return (\r\n        <ChromePicker\r\n          color={this.state.color}\r\n          onChange={this.onChangeColorPicker}\r\n        />\r\n      );\r\n    } else if (type === \"Sketch\") {\r\n      return (\r\n        <SketchPicker\r\n          color={this.state.color}\r\n          onChange={this.onChangeColorPicker}\r\n        />\r\n      );\r\n    } else if (type === \"Photoshop\") {\r\n      return (\r\n        <PhotoshopPicker\r\n          color={this.state.color}\r\n          onChange={this.onChangeColorPicker}\r\n        />\r\n      );\r\n    } else if (type === \"Github\") {\r\n      return (\r\n        <GithubPicker\r\n          color={this.state.color}\r\n          onChange={this.onChangeColorPicker}\r\n        />\r\n      );\r\n    } else if (type === \"Twitter\") {\r\n      return (\r\n        <TwitterPicker\r\n          color={this.state.color}\r\n          onChange={this.onChangeColorPicker}\r\n        />\r\n      );\r\n    } else if (type === \"Swatches\") {\r\n      return (\r\n        <SwatchesPicker\r\n          color={this.state.color}\r\n          onChange={this.onChangeColorPicker}\r\n        />\r\n      );\r\n    } else if (type === \"Compact\") {\r\n      return (\r\n        <CompactPicker\r\n          color={this.state.color}\r\n          onChange={this.onChangeColorPicker}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <SketchPicker\r\n          color={this.state.color}\r\n          onChange={this.onChangeColorPicker}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"color-picker-container\"}>\r\n        {/* <div style={this.props.labelStyle || this.props.defaultLabelStyle} /> */}\r\n        <div\r\n          style={{ backgroundColor: this.state.changeColor || this.props.defaultColor }}\r\n          className={\"color-picker-color-background\"}\r\n        />\r\n        <div className={\"color-text-with-popup\"}>\r\n          <input data-toggle=\"tooltip\" data-placement=\"top\" title=\"Click to change color\"\r\n            readOnly\r\n            style={\r\n              this.props.colorTextBoxStyle ||\r\n              this.props.defaultColorTextBoxStyle\r\n            }\r\n            className={\"color-picker-text\"}\r\n            type=\"text\"\r\n            name=\"color-picker-text\"\r\n            value={this.state.changeColor}\r\n            onClick={() => this.onHandleShowColorPicker()}\r\n          />\r\n          {this.state.displayColorPicker && (\r\n            <div className={\"color-picker-palette\"}>\r\n              <div\r\n                className={\"color-picker-cover\"}\r\n                onClick={() => this.onHandleCloseColorPicker()}\r\n              />\r\n              {this.generatePickerByType(this.props.pickerType || \"Sketch\")}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nColorPicker.defaultProps = {\r\n  defaultTitle: \"Color Picker\",\r\n  defaultLabelStyle: {\r\n    paddingBottom: \"7px\",\r\n    fontSize: \"11px\"\r\n  },\r\n  defaultColorTextBoxStyle: {\r\n    height: \"35px\",\r\n    width: \"150px\",\r\n    border: \"none\",\r\n    paddingLeft: \"65px\"\r\n  }\r\n};\r\n\r\nexport default ColorPicker;","function randcolor() {\r\n    let letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\nexport default randcolor;","import React from 'react';\r\nimport hexToRgba from 'hex-to-rgba';\r\nimport hexToRgbaExtends from './hex-to-rgba-extends';\r\nimport ColorPicker from './ColorPicker';\r\nimport Prism from \"prismjs\";\r\nimport randcolor from './randomcolor';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCheckSquare, faCoffee, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(fab, faCheckSquare, faCoffee, faPlus, faTimes);\r\n\r\nconst DEFAULTCOLOR = \"#b30059\";\r\n\r\nclass Gradient extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let defclr = randcolor();\r\n    let defcolstr = this.props.defaultColor !== undefined ? this.props.defaultColor : defclr;\r\n    let palettes = Array.from(Array(this.props.maxColor).keys());\r\n\r\n    this.state = {\r\n      palettes: palettes,\r\n      palettesType: 'Swatches',\r\n      colors: [defcolstr],\r\n      gradientColors: [hexToRgbaExtends(defcolstr)],\r\n      rgbaString: [hexToRgba(defcolstr)]\r\n    }\r\n\r\n    if (this.props.maxColor && this.props.maxColor > 1) {\r\n      let i = 0;\r\n      while (i < this.props.maxColor - 1) {\r\n        i += 1;\r\n        let r = randcolor();\r\n        this.state.colors.push(r);\r\n        this.state.gradientColors.push(hexToRgbaExtends(r));\r\n        this.state.rgbaString.push(hexToRgba(r));\r\n      }\r\n    }\r\n\r\n    this.props.onColorPickerChange(this.state.rgbaString);\r\n  }\r\n\r\n  handleAddColorPallete = () => {\r\n\r\n    if (this.state.palettes.length < this.props.maxColor) {\r\n      let randcol = randcolor();\r\n      this.state.gradientColors.push(hexToRgbaExtends(randcol));\r\n      this.state.rgbaString.push(hexToRgba(randcol));\r\n      this.state.colors.push(randcol);\r\n      this.setState({\r\n        palettes: [...this.state.palettes, \"\"],\r\n        colors: this.state.colors,\r\n        gradientColors: this.state.gradientColors,\r\n        rgbaString: this.state.rgbaString\r\n      });\r\n\r\n    } else {\r\n      let arr = Array.from(Array(this.props.maxColor).keys())\r\n\r\n      this.setState({\r\n        // TODO: count max\r\n        // palettes: [\"\", \"\", \"\", \"\", \"\"],\r\n        palettes: arr\r\n      });\r\n    }\r\n    this.props.onColorPickerChange(this.state.rgbaString);\r\n  }\r\n\r\n  handleDeleteColorPallete = (i) => {\r\n    if (i > 0) {\r\n      this.state.palettes.splice(i, 1);\r\n      this.state.gradientColors.splice(i, 1);\r\n      this.state.rgbaString.splice(i, 1);\r\n      this.state.colors.splice(i, 1);\r\n      this.setState({\r\n        palettes: this.state.palettes,\r\n        colors: this.state.colors,\r\n        gradientColors: this.state.gradientColors,\r\n        rgbaString: this.state.rgbaString\r\n      });\r\n\r\n    } else {\r\n      return;\r\n    }\r\n    this.props.onColorPickerChange(this.state.rgbaString);\r\n\r\n  }\r\n\r\n  handleChangePallete = () => {\r\n    let paltype = this.state.palettesType === 'Swatches' ? 'Sketch' : 'Swatches';\r\n    this.setState({\r\n      palettesType: paltype\r\n    });\r\n\r\n  }\r\n\r\n  onColorPickerChange = (color, i) => {\r\n    this.state.gradientColors[i] = color.rgb;\r\n    let rgba = color.rgb;\r\n    this.state.rgbaString[i] = `rgba(${rgba.r}, ${rgba.g},${rgba.b},${rgba.a})`;\r\n\r\n    this.setState({\r\n      gradientColors: this.state.gradientColors,\r\n      rgbaString: this.state.rgbaString\r\n    })\r\n    this.props.onColorPickerChange(this.state.rgbaString);\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-8\">\r\n              {this.props.gradientTitle}\r\n            </div>\r\n            {\r\n              this.props.maxColor > 1 &&\r\n              <div className=\"col-4 text-right\">\r\n                <button type=\"button\"\r\n                  id=\"addcolor\"\r\n                  onClick={this.handleAddColorPallete}\r\n                  className=\"btn btn-warning text-right\">\r\n                  {/* <i className=\"fas fa-plus\"></i> */}\r\n                  <FontAwesomeIcon icon=\"plus\" />\r\n                </button>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col text-right\">\r\n              <h5>Change color picker</h5>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\"\r\n                  onChange={this.handleChangePallete}\r\n                />\r\n                <span className=\"slider-check\"></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"gradient-color-wrapper\">\r\n            {\r\n              this.state.palettes.map((el, i) => {\r\n                return (\r\n                  <div key={i} id={i}>\r\n                    <ColorPicker onColorChange={this.onColorPickerChange}\r\n                      palleteKey={i}\r\n                      pickerType={this.state.palettesType}\r\n                      defaultColor={this.props.defaultColor || this.state.colors[i]}\r\n                      color={this.state.gradientColors[i]}\r\n                    />\r\n\r\n                    {i > 0 &&\r\n                      <button type=\"button\" className=\"delete-btn btn btn-outline-danger\"\r\n                        onClick={() => this.handleDeleteColorPallete(i)}>\r\n                        {/* <i className=\"fas fa-times\"></i> */}\r\n                        <FontAwesomeIcon icon=\"times\" />\r\n                      </button>}\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass RenderIcon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      code: \"\",\r\n      gradient: \"\",\r\n      borderRadius: \"\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let bgrRgba, txtBgr;\r\n    let angle = this.props.gradientAngle ? this.props.gradientAngle : '-180deg';\r\n    let radialType = this.props.radialType ? `${this.props.radialType},` : \"\";\r\n\r\n    if (this.props.rgbaColors.length > 1) {\r\n      if (this.props.gradientType === \"linear\") {\r\n        bgrRgba = {\r\n          // backgroundImage: \"linear-gradient\r\n          backgroundImage: `${this.props.gradientType}-gradient(${angle}, ${this.props.rgbaColors.join(',')})`\r\n        };\r\n        txtBgr = `${this.props.gradientType}-gradient(${angle}, ${this.props.rgbaColors.join(',')})`;\r\n      } else {\r\n        bgrRgba = {\r\n          // backgroundImage: \"radial-gradient\r\n          backgroundImage: `${this.props.gradientType}-gradient(${radialType}${this.props.rgbaColors.join(',')})`\r\n        };\r\n        txtBgr = `${this.props.gradientType}-gradient(${radialType}${this.props.rgbaColors.join(',')})`;\r\n      }\r\n\r\n    } else {\r\n      bgrRgba = { background: this.props.rgbaColors[0] || DEFAULTCOLOR };\r\n      txtBgr = this.props.rgbaColors[0];\r\n    }\r\n\r\n    bgrRgba.borderRadius = this.props.borderRadius;\r\n\r\n    const userGradient = {\r\n      background: txtBgr,\r\n      WebkitBackgroundClip: \"text\",\r\n      backgroundClip: \"text\",\r\n      color: \"transparent\"\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"row text-center mt-5 mb-5\">\r\n          <div className=\"col\">\r\n            <h1 style={userGradient} className=\"text\" key={txtBgr}>\r\n              text gradient\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col text-center\">\r\n            <div className=\"box mb-5\" style={bgrRgba}>\r\n              <div className=\"box-iconstyle\" style={{ color: this.props.rgbaIconColors[0] }}>\r\n                <FontAwesomeIcon icon={['fab', 'apple']} />\r\n              </div>\r\n            </div>\r\n            <div className=\"box mb-5\" style={bgrRgba}>\r\n              <div className=\"box-iconstyle\" style={{ color: this.props.rgbaIconColors[0] }}>\r\n                <FontAwesomeIcon icon={['fab', 'chrome']} />\r\n              </div>\r\n            </div>\r\n            <div className=\"box mb-5\" style={bgrRgba}>\r\n              <div className=\"box-iconstyle\" style={{ color: this.props.rgbaIconColors[0] }}>\r\n                <FontAwesomeIcon icon={['fab', 'cc-visa']} />\r\n              </div>\r\n            </div>\r\n            <div className=\"box mb-5\" style={bgrRgba}>\r\n              <div className=\"box-iconstyle\" style={{ color: this.props.rgbaIconColors[0] }}>\r\n                <FontAwesomeIcon icon={['fab', 'app-store']} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <RenderCode\r\n              code={bgrRgba}\r\n              iconColor={{ color: this.props.rgbaIconColors[0] }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nclass RenderCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      css: \"\",\r\n      code: this.props.code,\r\n      html: `<div class=\"box\">\r\n  <i class=\"fab fa-apple\"></i>\r\n</div>\r\n\r\n<!-- Text gradient -->\r\n<h1 class=\"text\">Hello</h1>\r\n`\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => Prism.highlightAll(), 0)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    setTimeout(() => Prism.highlightAll(), 0)\r\n  }\r\n\r\n  setCss = () => {\r\n    let bgr;\r\n    if (!this.props.code.backgroundImage) {\r\n      bgr = `background: ${this.props.code.background};`;\r\n    } else {\r\n      bgr = `background-image: ${this.props.code.backgroundImage};`\r\n    }\r\n\r\n    let textBgr = this.props.code.background || this.props.code.backgroundImage;\r\n    let bradius = this.props.code.borderRadius ?\r\n      `border-radius: ${this.props.code.borderRadius};` : 'border-radius: 0';\r\n\r\n    let css = `\r\n.box {\r\n  position: relative;\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 0 auto;\r\n  ${bgr}\r\n  ${bradius}\r\n}\r\n    \r\ni {\r\n  position: absolute;\r\n  font-size: 3em;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: ${this.props.iconColor.color};\r\n}\r\n\r\n/* Text gradient style */\r\n.text {\r\n  background: ${textBgr};\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-size: 10vw;\r\n  font-family: 'Anton', sans-serif;\r\n}\r\n`\r\n    return css;\r\n  }\r\n\r\n  render() {\r\n    let css = this.setCss();\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h5>HTML</h5>\r\n            <pre className=\"line-numbers\">\r\n              <code className=\"language-html\">\r\n                {this.state.html.trim()}\r\n              </code>\r\n            </pre>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h5>CSS</h5>\r\n            <pre className=\"line-numbers\">\r\n              <code className=\"language-css\">\r\n                {css.trim()}\r\n              </code>\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass IconBorderRadius extends React.Component {\r\n  handleRadius = (e) => {\r\n    this.props.onChangeRadius(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"slidecontainer\">\r\n        <input type=\"range\" min=\"0\" max=\"50\" className=\"slider\" id=\"myRange\" defaultValue=\"0\"\r\n          onChange={this.handleRadius}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass GradientSettings extends React.Component {\r\n\r\n  handleDirection = (e) => {\r\n    this.props.onChangeDirection(e.target.value)\r\n  }\r\n  handleGradientType = (e) => {\r\n    this.props.onChangeGradientType(e.target.value)\r\n  }\r\n\r\n  handleRadialType = (e) => {\r\n    this.props.onChangeRadialType(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card mt-1\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h5>Turn on radial</h5>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\"\r\n                  onChange={this.handleGradientType}\r\n                />\r\n                <span className=\"slider-check\"></span>\r\n              </label>\r\n            </div>\r\n            <div className=\"col\">\r\n              <h5>Turn on circle</h5>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\"\r\n                  onChange={this.handleRadialType}\r\n                />\r\n                <span className=\"slider-check\"></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <h5>Linear gradient angle</h5>\r\n\r\n          <div className=\"slidecontainer\">\r\n            <input type=\"range\" min=\"-180\" max=\"180\" className=\"slider\" id=\"direcions\" defaultValue=\"-180\"\r\n              onChange={this.handleDirection}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rgbaGradientState: [],\r\n      rgbaGradientIconState: [],\r\n      bgrColorState: \"\",\r\n      borderRadius: \"\",\r\n      gradientAngle: \"\",\r\n      gradientType: \"linear\",\r\n      radialType: \"\"\r\n    }\r\n  }\r\n\r\n  setGradientColors = (colors) => {\r\n    this.setState({\r\n      rgbaGradientState: colors\r\n    });\r\n  }\r\n\r\n  setGradientIconColors = (colors) => {\r\n    this.setState({\r\n      rgbaGradientIconState: colors\r\n    });\r\n  }\r\n\r\n  setBorderRadius = (radius) => {\r\n    let borderRadius = (radius === '0') ? radius : radius + \"%\";\r\n    this.setState({\r\n      borderRadius: borderRadius,\r\n    });\r\n  }\r\n\r\n  setGradientDirection = (angle) => {\r\n    this.setState({\r\n      gradientAngle: angle + \"deg\",\r\n    });\r\n  }\r\n\r\n  setGradientType = (t) => {\r\n    let type;\r\n    type = this.state.gradientType === \"linear\" ? \"radial\" : \"linear\"\r\n\r\n    this.setState({\r\n      gradientType: type\r\n    });\r\n  }\r\n\r\n  setRadialType = (t) => {\r\n    let type;\r\n    type = this.state.radialType === \"\" ? \"circle\" : \"\"\r\n    this.setState({\r\n      radialType: type\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\">\r\n          <Gradient\r\n            onColorPickerChange={this.setGradientColors}\r\n            maxColor={3}\r\n            gradientTitle={\"Background colors\"}\r\n          />\r\n          <Gradient onColorPickerChange={this.setGradientIconColors}\r\n            defaultColor={'#ffe6f2'}\r\n            maxColor={1}\r\n            gradientTitle={\"Icon color\"}\r\n          />\r\n          <GradientSettings\r\n            onChangeDirection={this.setGradientDirection}\r\n            onChangeGradientType={this.setGradientType}\r\n            onChangeRadialType={this.setRadialType}\r\n          />\r\n          <h5 className=\"card-title\">Border Radius</h5>\r\n          <IconBorderRadius onChangeRadius={this.setBorderRadius} />\r\n        </div>\r\n        <div className=\"col-md-9 text-center\">\r\n\r\n          <RenderIcon\r\n            rgbaColors={this.state.rgbaGradientState}\r\n            rgbaIconColors={this.state.rgbaGradientIconState}\r\n            borderRadius={this.state.borderRadius}\r\n            gradientAngle={this.state.gradientAngle}\r\n            gradientType={this.state.gradientType}\r\n            radialType={this.state.radialType}\r\n          />\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport \"./prism.css\";\r\nimport './index.css';\r\n\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(<App />, document.getElementById('container'));\r\n/*\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Prism from \"prismjs\"\r\nimport \"./prism.css\"\r\nconst code = `\r\nconst foo = 'foo';\r\nconst bar = 'bar';\r\nconsole.log(foo + bar);\r\n`.trim()\r\nclass Page extends React.Component {\r\n    componentDidMount() {\r\n        // You can call the Prism.js API here\r\n        // Use setTimeout to push onto callback queue so it runs after the DOM is updated\r\n        setTimeout(() => Prism.highlightAll(), 0)\r\n    }\r\n    render() {\r\n        return (\r\n            <pre className=\"line-numbers\">\r\n                <code className=\"language-js\">\r\n                    {code}\r\n                </code>\r\n            </pre>\r\n        )\r\n    }\r\n}\r\nReactDOM.render(<Page />, document.getElementById(\"container\"))\r\n// Or call the Prism.js API here\r\nsetTimeout(() => Prism.highlightAll(), 0)\r\n*/"],"sourceRoot":""}